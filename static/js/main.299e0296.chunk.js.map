{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","React","memo","tabs","selectedTabsId","onTabSelected","className","map","id","title","href","onClick","find","tab","content","App","useState","setSelectedTabsId","selectedTab","event","targetTab","currentTarget","hash","slice","ReactDOM","render","document","getElementById"],"mappings":"0MAcaA,EAAwBC,IAAMC,MAAK,kBAC9CC,EAD8C,EAC9CA,KACAC,EAF8C,EAE9CA,eACAC,EAH8C,EAG9CA,cAH8C,OAK9C,qCACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,oBAEEH,UAAWE,IAAOJ,EAAiB,YAAc,GACjD,UAAQ,MAHV,SAKE,mBACEM,KAAI,WAAMF,GACV,UAAQ,UACRG,QAASN,EAHX,SAKGI,KATED,UAgBb,qBAAKF,UAAU,QAAQ,UAAQ,aAA/B,mBACGH,EAAKS,MAAK,SAAAC,GAAG,OAAIA,EAAIL,KAAOJ,YAD/B,aACG,EAA6CU,gBClCvCX,EAAO,CAClB,CAAEK,GAAI,QAASC,MAAO,QAASK,QAAS,eACxC,CAAEN,GAAI,QAASC,MAAO,QAASK,QAAS,eACxC,CAAEN,GAAI,QAASC,MAAO,QAASK,QAAS,gBAG7BC,EAAgB,WAC3B,MAA4CC,mBAAS,SAArD,mBAAOZ,EAAP,KAAuBa,EAAvB,KAOMC,EAAcf,EAAKS,MAAK,SAAAC,GAAG,OAAIA,EAAIL,KAAOJ,KAEhD,OACE,sBAAKE,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,oCACmBY,QADnB,IACmBA,OADnB,EACmBA,EAAaT,SAGhC,qBAAK,UAAQ,gBAAb,SACE,cAACT,EAAD,CACEG,KAAMA,EACNC,eAAgBA,EAChBC,cAlBY,SAACc,GACnB,IAAMC,EAAYD,EAAME,cAExBJ,EAAkBG,EAAUE,KAAKC,MAAM,aCf3CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.299e0296.chunk.js","sourcesContent":["import React from 'react';\n\ninterface TabsType {\n  id: string;\n  title: string;\n  content: string;\n}\n\ntype Props = {\n  tabs: TabsType[],\n  selectedTabsId: string,\n  onTabSelected: React.MouseEventHandler<HTMLAnchorElement>,\n};\n\nexport const Tabs: React.FC<Props> = React.memo(({\n  tabs,\n  selectedTabsId,\n  onTabSelected,\n}) => (\n  <>\n    <div className=\"tabs is-boxed\">\n      <ul>\n        {tabs.map(({ id, title }) => (\n          <li\n            key={id}\n            className={id === selectedTabsId ? 'is-active' : ''}\n            data-cy=\"Tab\"\n          >\n            <a\n              href={`#${id}`}\n              data-cy=\"TabLink\"\n              onClick={onTabSelected}\n            >\n              {title}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n\n    <div className=\"block\" data-cy=\"TabContent\">\n      {tabs.find(tab => tab.id === selectedTabsId)?.content}\n    </div>\n  </>\n));\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabsId, setSelectedTabsId] = useState('tab-1');\n  const handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    const targetTab = event.currentTarget as HTMLAnchorElement;\n\n    setSelectedTabsId(targetTab.hash.slice(1));\n  };\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabsId);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is {selectedTab?.title}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <Tabs\n          tabs={tabs}\n          selectedTabsId={selectedTabsId}\n          onTabSelected={handleClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}